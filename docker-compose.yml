services:

  db:
    image: postgres:alpine3.18
    volumes:
      - ./app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    deploy:
      placement:
        constraints:
          - node.labels.${STACK_NAME?Variable not set}.app-db-data == true

  pgadmin:
    image: dpage/pgadmin4
    networks:
      - default
    ports:
      - 5050:5050
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    ports:
      - 81:80
    depends_on:
      - db
    volumes:
      - ./backend/app:/app
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST}
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
  # frontend:
  #   ports:
  #     - 82:80
  #   image: '${DOCKER_IMAGE_FRONTEND?Variable not set}:${TAG-latest}'
  #   build:
  #     context: ./frontend
  #     args:
  #       FRONTEND_ENV: ${FRONTEND_ENV-production}

volumes:
  app-db-data:
  pgadmin-data:


